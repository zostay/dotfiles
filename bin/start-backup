#!/usr/bin/env perl

use strict;
use warnings;
use autodie;

my $BACKUP_LV = "backup";
my $BACKUP_DIR = "/var/cache/rsnapshot";
my $BACKUP_CONF = "/etc/rsnapshot.conf";

my %durations = (
    yearly  => 365 * 24 * 60 * 60,
    monthly => 30 * 24 * 60 * 60,
    weekly  => 7 * 24 * 60 * 60,
    daily   => 24 * 60 * 60,
    hourly  => 60 * 60,
);

# Safely ready LVM and mount
system(qw( mount-backup ));

# Fix dir perms for backup directories
opendir(my $dh, $BACKUP_DIR);
while (readdir $dh) {
    next unless /^ \w+ [.] \d+ $/x;
    system(qw( sudo chmod a+rx ), "$BACKUP_DIR/$_");
}
closedir $dh;

# Read the rsnapshot configuration
my @retains = do {
    open my $fh, '<', $BACKUP_CONF;
    my @retain_lines = map { split /\s+/ } map s/^retain\s+//r, grep /^retain\b/, <$fh>;
    close $fh;
    reverse @retain_lines;
};

push @retains, 1,  $retains[-1];

# Check the age of each backup and run the appropriate phases... longer phases
# run first to get the older backup set saved
my $now = time;
my ($tcount, $this);
while (my ($pcount, $prev) = splice @retains, 0, 2) {
    unless (defined $this) {
        ($tcount, $this) = ($pcount, $prev);
        next;
    }

    my $prev_final = $pcount - 1;

    my $previous_backup = "$BACKUP_DIR/$prev.$prev_final";
    my $this_backup     = "$BACKUP_DIR/$this.0";

    next unless -d $previous_backup;

    my $prev_mtime = (stat $previous_backup)[9];
    my $this_mtime = $this eq $prev  ? time
                   : -d $this_backup ? (stat $this_backup)[9]
                   :                   time
                   ;

    # print "PREV $prev time: ", scalar localtime($prev_mtime), "\n";
    # print "THIS $this time: ", scalar localtime($this_mtime), "\n";
    # print "$prev -> $this: ", $this_mtime - $prev_mtime, " > ", $durations{ $this }, "?\n";

    if (abs($this_mtime - $prev_mtime) > $durations{ $this }) {
        print "Starting $this ... \n";
        system(qw( sudo rsnapshot ), $this);
    }

} continue {
    ($tcount, $this) = ($pcount, $prev);
}

# Safely unmount and ready LVM for unplug
system(qw( umount-backup ));
