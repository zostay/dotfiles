#!/bin/zsh

# Pull a secret from LastPass and store it locally using the local secret key to
# keep them (weakly) encoded locally.

source ~/bin/zostay-secrets

PROG=$(basename $0)
usage() {
    echo usage: $PROG key secret [ category ]
    exit 1
}

if [[ -z "$1" ]]; then
    usage
fi

if [[ -z "$2" ]]; then
    usage
fi

CATEGORY=Personal
if [[ -n "$3" ]]; then
    CATEGORY="$3"
fi

if ! hash lpass 2> /dev/null; then
    echo Install lpass to set secrets or set them elsewhere and zostay-send-secrets to here. >&2
    exit 1;
fi

FAIL=0
[[ $ZOSTAY_SECRETS_SKIP_LOGIN = "YES" ]] || lpass login $LPASS_USERNAME || exit 1
if lpass show "$1" 1&>2 > /dev/null; then
    ACTIONED=Updated
    ACTION=update
    echo $2 | lpass edit --non-interactive --password "$1" || FAIL=2
else
    ACTIONED=Added
    ACTION=add
    echo $2 | lpass add --non-interactive --password "$1" || FAIL=2
    # NYI: Moving seems to duplicate with lpass mv
    # See https://github.com/lastpass/lastpass-cli/issues/233
    #lpass mv "$1" $CATEGORY || FAIL=3
fi
lpass show "$1" 1&>2 > /dev/null || FAIL=4
lpass sync || FAIL=5

# Success/error reporting
(( $FAIL == 0 )) && echo $ACTIONED '"'$1'"'
(( $FAIL == 2 )) && echo Failed to $ACTION '"'$1'"' >&2
(( $FAIL == 3 )) && echo Failed to move '"'$1'"' to '"'$CATEGORY'"' >&2
(( $FAIL == 4 )) && echo Failed to verify '"'$1'"' >&2
(( $FAIL == 4 )) && echo Failed to sync '"'$1'"' >&2

[[ $ZOSTAY_SECRETS_SKIP_LOGIN = "YES" ]] || lpass logout --force
exit $FAIL
