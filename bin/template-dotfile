#!/usr/bin/env perl
use strict;
use warnings;

use lib "$ENV{HOME}/bin/lib";
use lib "$ENV{HOME}/bin/Text-Template/lib";
use Text::Template;
use Zostay qw( dotfiles_config );

my $env_name = shift @ARGV;
die "environment name is required\n" unless $env_name;

my $file_name = shift @ARGV;
die "unknown file name: $file_name\n" unless $file_name
                          && -f "$file_name.tmpl";

my $output_name = shift @ARGV;
die "output name is required\n" unless $output_name;

my $config = dotfiles_config($file_name, $env_name);
die "unable to find config for $file_name in $env_name\n"
    unless $config;

# Do not template this file if instructed not to
exit if $config->{__SKIP__};

sub Zostay::AUTOGEN_WARNING {
  my $warning = <<END_OF_WARNING;
DO NOT EDIT!!! THIS FILE IS AUTOMATICALLY GENERATED!!!
Please edit the original:
END_OF_WARNING

  $warning =~ s/\s+$//gms;
  $warning .= " $ENV{PWD}/$file_name.tmpl\n";

  if (@_ == 0) {
    $warning =~ s/^/# /gms;
  }
  elsif (@_ == 1) {
    $warning =~ s/^/$_[0] /gms;
  }
  elsif (@_ == 2) {
    $warning =~ s/^/$_[0]/gms;
    $warning =~ s/$/$_[1]/gms;
  }

  return $warning;
}

my $template = Text::Template->new(
    TYPE       => 'FILE',
    SOURCE     => "$file_name.tmpl",
    DELIMITERS => [ '[%', '%]' ],
);
my $txt = $template->fill_in(HASH => $config);

open my $fh, '>', $output_name or die "cannot open $output_name: $!";
print $fh $txt;
close $fh or die "cannot write to $output_name: $!";
