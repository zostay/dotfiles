#!/usr/bin/env perl
use v5.14;
use warnings;

use lib "$ENV{HOME}/bin/lib";

use DDP;
use DateTime;
use Date::Parse qw( str2time );
use Email::MIME;
use File::Find::Rule;
use List::Util qw( none );
use YAML::Tiny;
use Zostay qw( dotfiles_environment );

my $MAILDIR = "$ENV{HOME}/Mail";

my $env    = dotfiles_environment();
my $config = YAML::Tiny->read("$ENV{HOME}/.purge-mail.yml")->[0];
my @PURGE = (
    @{ $config->{'*'}  // [] },
    @{ $config->{$env} // [] },
);

if (-f "$ENV{HOME}/.purge-mail.local.yml") {
    my $local = YAML::Tiny->read("$ENV{HOME}/.purge-mail.local.yml")->[0];
    push @PURGE, @{ $local // [] };
}

die "no Mail directory present" unless -d $MAILDIR;

my $purging = 0;
sub purge_mail {
    my ($start, @criteria) = @_;

    my $rule = File::Find::Rule->file->start($start);
    while (defined (my $msg_file = $rule->match)) {
        open my $msg_fh, '<', $msg_file or die "cannot open $msg_file: $!";
        my $msg_txt = do { local $/; <$msg_fh> };
        close $msg_fh;

        my ($folder) = split '/', substr $msg_file, length($MAILDIR) + 1;

        # say $folder;
        # say $msg_file;

        my $msg = Email::MIME->new($msg_txt);
        # say $msg->header_str('Date');
        my $date = DateTime->from_epoch(epoch => str2time($msg->header_str('Date')));

        my $x_keywords = $msg->header_str('X-Keywords');
        my @keywords   = $x_keywords ? split(/\s*,\s*/, $x_keywords) : ();
        my %keywords   = map { $_ => 1 } @keywords;

        # Already purged, nothing to do
        next if $keywords{'\Trash'};

        # If I starred it, keep forever
        next if $keywords{'\Important'};
        next if $keywords{'\Starred'};

        for my $c (@criteria) {
            my $okay_date = $c->{okay_date};
            next unless DateTime->compare($date, $okay_date) < 0;

            if (defined $c->{from}) {
                my $from = $msg->header_str('From');
                my @addrs = Email::Address->parse($from);
                next unless @addrs;

                next if none { $_->address eq $c->{from} } @addrs;
            }

            $purging++;
            $msg->header_str_set(
                'X-Keywords' => join(', ', @keywords, '\Trash')
            );

            open my $out_fh, '>', $msg_file or die "cannot open $msg_file to purge: $!";
            print $out_fh $msg->as_string;
            close $out_fh;

            last;
        }
    }
}

my %folders;
for my $config (@PURGE) {
    $config->{okay_date} = DateTime->now->subtract(
        days => $config->{days} // 90,
    );

    push @{ $folders{ $config->{folder} // '' } }, $config;
}

for my $folder (keys %folders) {
    purge_mail("$MAILDIR/$folder", @{ $folders{ $folder } });
}

say "Marked $purging messages for purging.";
